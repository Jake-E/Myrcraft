var servers = ["liahsflih","IS-19371","IS-23987","IS-23990","IS-23991","IS-26653","IS-27685","IS-27992","IS-28019","IS-28102","IS-28105","IS-28106","IS-28107","IS-28115","IS-28117","IS-28118","IS-28129","IS-28133","IS-28135","IS-28202","IS-28204","IS-28205","IS-28206","IS-28207","IS-28209","IS-28210","IS-28241","IS-28242","IS-28243","IS-28244","IS-28245","IS-28246","IS-28247","IS-28248","IS-28251","IS-28252","IS-28254","IS-28255","IS-30397","IS-30398","IS-30399","IS-30400","IS-30401","IS-30407","IS-30649","IS-30779","IS-30825","IS-48679","IS-48900","IS-49055","IS-54040","IS-54042","IS-54044","IS-54045","IS-54046","IS-54047","IS-54048","IS-54049","IS-54055","IS-54056","IS-54057","IS-54061","IS-54062","IS-54063","IS-54064","IS-54065","IS-54066","IS-54067","IS-54068","IS-54070","IS-54072","IS-54073","IS-54075","IS-54077","IS-54078","IS-54079","IS-54080","IS-54081","IS-54083","IS-54084","IS-54085","IS-54086","IS-54087","IS-54088","IS-54089","IS-54091","IS-54094","IS-54095","IS-54096","IS-54097","IS-54098","IS-54099","IS-54100","IS-54101","IS-54102","IS-54103","IS-54104","IS-54105","IS-54106","IS-54276","IS-55972","IS-70028","IS-72271","IS-72272","IS-72320","IS-72321","IS-72322","IS-72323","IS-72324","IS-72325","IS-72326","IS-72328","IS-72329","IS-72365","IS-72533","IS-72542","IS-73064","IS-73162","IS-73324","IS-73376","IS-73452","IS-73456","IS-73457","IS-73459","IS-73460","IS-73470","IS-73471","IS-73472","IS-73473","IS-73773","IS-74172","IS-74173","IS-74174","IS-74175","IS-74176","IS-74183","IS-74312","IS-74313","IS-74499","IS-74500","IS-74501","IS-74502","IS-74503","IS-74504","IS-74505","IS-74506","IS-74507","IS-74508","IS-74514","IS-74515","IS-74516","IS-74517","IS-74518","IS-74519","IS-74520","IS-74521","IS-74524","IS-74526","IS-74528","IS-74529","IS-74530","IS-74531","IS-74532","IS-74533","IS-74534","IS-74535","IS-74536","IS-74537","IS-74538","IS-74539","IS-74540","IS-74542","IS-74543","IS-74544","IS-74545","IS-74546","IS-74547","IS-74548","IS-74550","IS-74551","IS-74552","IS-74573","IS-74574","IS-74575","IS-74576","IS-74577","IS-74736","IS-74737","IS-74738","IS-74739","IS-74740","IS-74750","IS-74751","IS-74752","IS-74753","IS-74754","IS-74755","IS-74756","IS-74757","IS-74758","IS-74759","IS-74760","IS-74761","IS-74762","IS-74763","IS-74764","IS-74765","IS-74766","IS-74767","IS-74768","IS-74769","IS-74770","IS-74771","IS-74785","IS-74812","IS-74834","IS-74835","IS-74836","IS-74837","IS-74838","IS-74839","IS-74840","IS-74841","IS-74842","IS-74843","IS-74845","IS-74846","IS-74847","IS-74848","IS-74849","IS-74850","IS-74853","IS-74882","IS-74892","IS-74919","IS-74920","IS-74921","IS-74922","IS-74924","IS-74925","IS-74954","IS-75433","IS-75539","IS-75666","IS-76105","IS-76299","IS-76375","IS-76590","IS-76740","IS-76759","IS-76760","IS-76761","IS-76762","IS-76763","IS-76764","IS-76765","IS-76766","IS-76767","IS-76768","IS-76769","IS-76770","IS-76771","IS-76772","IS-76773","IS-76774","IS-76775","IS-76776","IS-76777","IS-76778","IS-76799","IS-77116","IS-77117","IS-77161","IS-77162","IS-77163","IS-77164","IS-77165","IS-77166","IS-77167","IS-77168","RA-00230","RA-00231","RA-00269"];
servers.forEach( (server) => {
    console.log("Searching for " + server);
    findString(server);
});


var n = 0;
var TRange = null;

function findString(str) {
    if (parseInt(navigator.appVersion) < 4) return;
    var strFound;
    if (window.find) {
        // CODE FOR BROWSERS THAT SUPPORT window.find
        strFound = self.find(str);
        if (strFound && self.getSelection && !self.getSelection().anchorNode) {
            strFound = self.find(str)
        }
        if (!strFound) {
            strFound = self.find(str, 0, 1)
            while (self.find(str, 0, 1)) continue
        }
    } else if (navigator.appName.indexOf("Microsoft") != -1) {
        // EXPLORER-SPECIFIC CODE        
        if (TRange != null) {
            TRange.collapse(false)
            strFound = TRange.findText(str)
            if (strFound) console.log("Server found")
        }
        if (TRange == null || strFound == 0) {
            TRange = self.document.body.createTextRange()
            strFound = TRange.findText(str)
            if (strFound) console.log("Server found")
        }
    } else if (navigator.appName == "Opera") {
        alert("Opera browsers not supported, sorry...")
        return;
    }
    if (!strFound) console.log(str + "' not found!")
        return;
};